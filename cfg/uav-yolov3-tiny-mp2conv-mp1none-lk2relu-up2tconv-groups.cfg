[net]
# Testing
batch=1
subdivisions=1
# Training
# batch=64
# subdivisions=2
width=416
height=416
channels=3
momentum=0.9
decay=0.0005
angle=0
saturation = 1.5
exposure = 1.5
hue=.1

learning_rate=0.001
burn_in=1000
max_batches = 500200
policy=steps
steps=400000,450000
scales=.1,.1

# 0 leaky_relu->relu
[convolutional]
batch_normalize=1
filters=16
size=3
stride=1
pad=1
groups=1
activation=relu

# 1 mp2conv
[convolutional]
batch_normalize=1
filters=16
size=3
stride=2
pad=1
groups=1
activation=relu

# 2 leaky_relu->relu
[convolutional]
batch_normalize=1
filters=32
size=3
stride=1
pad=1
groups=1
activation=relu

# 3 mp2conv
[convolutional]
batch_normalize=1
filters=32
size=3
stride=2
pad=1
groups=2
activation=relu

# 4 leaky_relu->relu
[convolutional]
batch_normalize=1
filters=64
size=3
stride=1
pad=1
groups=2
activation=relu

# 5 mp2conv
[convolutional]
batch_normalize=1
filters=64
size=3
stride=2
pad=1
groups=4
activation=relu

# 6 leaky_relu->relu
[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
groups=4
activation=relu

# 7 mp2conv
[convolutional]
batch_normalize=1
filters=128
size=3
stride=2
pad=1
groups=8
activation=relu

# 8 leaky_relu->relu
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
groups=8
activation=relu

# 9 mp2conv
[convolutional]
batch_normalize=1
filters=256
size=3
stride=2
pad=1
groups=16
activation=relu

# 10 leaky_relu->relu
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
groups=16
activation=relu

# mp2conv
#[convolutional]
#batch_normalize=1
#filters=512
#size=3
#stride=1
#pad=1
#groups=1
#activation=relu

# 11 leaky_relu->relu
[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
groups=32
activation=relu

###########

# 12 leaky_relu->relu
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
groups=4
activation=relu

# 13 leaky_relu->relu
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
groups=16
activation=relu

# 14
[convolutional]
size=1
stride=1
pad=1
#filters=255
filters=18
groups=1
activation=linear


# 15
[yolo]
mask = 3,4,5
#mask = 0,1,2
#anchors = 10,14,  23,27,  37,58,  81,82,  135,169,  344,319
anchors = 8,9, 10,12, 13,12, 14,15, 17,20, 23,26
#anchors = 9,11, 14,15, 20,23
#classes=80
classes=1
num=6
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1

# 16
[route]
layers = -4

# 17 leaky_relu->relu
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
groups=1
activation=relu

# 18 upsample->transposed_convolutional
#[upsample]
#stride=2
[transposed_convolutional]
batch_normalize=1
filters=128
size=3
stride=2
pad=1
groups=8
activation=relu

# 19
[route]
layers = -1, 8

# 20 leaky_relu->relu
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
groups=16
activation=relu

# 21
[convolutional]
size=1
stride=1
pad=1
#filters=255
filters=18
groups=1
activation=linear

# 22
[yolo]
mask = 1,2,3
#anchors = 10,14,  23,27,  37,58,  81,82,  135,169,  344,319
anchors = 8,9, 10,12, 13,12, 14,15, 17,20, 23,26
#classes=80
classes=1
num=6
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1
